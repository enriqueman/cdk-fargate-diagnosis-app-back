name: CdkPipeline


on:
  push:
    branches:
      - 'develop'
      - 'master'
      - 'feature**'
      - 'main'

  delete:
    branches:
      - 'feature**'
  pull_request:
    branches:
      - main


env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PIPELINE_USER_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  PIPELINE_USER_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # AWS_ACCESS_KEY_ID_DOCKER: ${{ secrets.AWS_ACCESS_KEY_ID_DOCKER }}
  # AWS_SECRET_ACCESS_KEY_DOCKER: ${secrets.AWS_SECRET_ACCESS_KEY_DOCKER}
  TESTING_PIPELINE_EXECUTION_ROLE: arn:aws:iam::471112837636:role/cdk-pipeline-deployment-role
  TESTING_REGION: us-east-2
 

jobs:

  test:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install Python dependencies and CDK
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm install -g aws-cdk
      # - name: Trigger tests
      #   run: |
      #     pytest

  deploy-dev:
    if: github.ref == 'refs/heads/develop'
    needs: [test]
    runs-on: ubuntu-latest
    env:
      APP_STAGE: dev
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: deploy to account id
        run: |
          echo "Deploy to account: ${{ github.event.inputs.target_account_id}}"
      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: dev-cdk-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true
      - name: Install Python dependencies and CDK
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm install -g aws-cdk
      - name: Deploy to AWS
        run: |
          cdk deploy --app="python3 ${PWD}/app.py" --require-approval=never

  ci-cd:
    runs-on: ubuntu-latest
    # Agregar estos permisos
    permissions:
      issues: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install fastapi uvicorn pytest httpx

    # Usar el token con los permisos correctos
    - name: PR Start Comment
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: "CI/CD en acción. Ejecutando tareas..."
          })

    - name: Run Tests
      run: pytest tests/ -v

    - name: PR Success Comment
      if: github.event_name == 'pull_request' && success()
      uses: actions/github-script@v6
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: "CI/CD terminado con éxito."
          })